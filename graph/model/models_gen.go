// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/projectulterior/2cents-backend/graph/resolver"
	"github.com/projectulterior/2cents-backend/pkg/format"
)

type AddMembersInput struct {
	ChannelID string   `json:"channelID"`
	MemberID  string   `json:"memberID"`
	MemberIDs []string `json:"memberIDs"`
}

type ChannelCreateInput struct {
	MemberIDs []string `json:"memberIDs"`
}

type CommentCreateInput struct {
	PostID      string             `json:"postID"`
	Content     string             `json:"content"`
	ContentType format.ContentType `json:"contentType"`
}

type CommentUpdateInput struct {
	Content     *string             `json:"content,omitempty"`
	ContentType *format.ContentType `json:"contentType,omitempty"`
}

type MessageCreateInput struct {
	ChannelID   string              `json:"channelID"`
	SenderID    string              `json:"senderID"`
	Content     *string             `json:"content,omitempty"`
	ContentType *format.ContentType `json:"contentType,omitempty"`
}

type MessageUpdateInput struct {
	MessageID   string              `json:"messageID"`
	SenderID    string              `json:"senderID"`
	Content     *string             `json:"content,omitempty"`
	ContentType *format.ContentType `json:"contentType,omitempty"`
}

type Notifications struct {
	Messages *int `json:"messages,omitempty"`
}

type PostCreateInput struct {
	Visibility  format.Visibility  `json:"visibility"`
	Content     string             `json:"content"`
	ContentType format.ContentType `json:"contentType"`
}

type PostUpdateInput struct {
	Visibility  *format.Visibility  `json:"visibility,omitempty"`
	Content     *string             `json:"content,omitempty"`
	ContentType *format.ContentType `json:"contentType,omitempty"`
}

type UserUpdateInput struct {
	Name     *string          `json:"name,omitempty"`
	Email    *string          `json:"email,omitempty"`
	Bio      *string          `json:"bio,omitempty"`
	Birthday *format.Birthday `json:"birthday,omitempty"`
	Profile  *string          `json:"profile,omitempty"`
	Cover    *string          `json:"cover,omitempty"`
}

type Users struct {
	Users []*resolver.User `json:"users"`
	Next  string           `json:"next"`
}
